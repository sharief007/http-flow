// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers"
/**
 * @enum {number}
 */
export namespace HttpInterceptor{
export enum WebSocketMessageType{
  NONE= 0,
  ServerEvent= 1,
  FlowData= 2
}};

/**
 * @constructor
 */
export namespace HttpInterceptor{
export class FlowData {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns FlowData
 */
__init(i:number, bb:flatbuffers.ByteBuffer):FlowData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FlowData= obj
 * @returns FlowData
 */
static getRootAsFlowData(bb:flatbuffers.ByteBuffer, obj?:FlowData):FlowData {
  return (obj || new FlowData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FlowData= obj
 * @returns FlowData
 */
static getSizePrefixedRootAsFlowData(bb:flatbuffers.ByteBuffer, obj?:FlowData):FlowData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FlowData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
method():string|null
method(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
method(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
url():string|null
url(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
url(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
status():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
startTimestamp():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns number
 */
endTimestamp():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns number
 */
requestSize():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
responseSize():number {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param HttpInterceptor.HeaderPair= obj
 * @returns HttpInterceptor.HeaderPair
 */
requestHeaders(index: number, obj?:HttpInterceptor.HeaderPair):HttpInterceptor.HeaderPair|null {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new HttpInterceptor.HeaderPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
requestHeadersLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param HttpInterceptor.HeaderPair= obj
 * @returns HttpInterceptor.HeaderPair
 */
responseHeaders(index: number, obj?:HttpInterceptor.HeaderPair):HttpInterceptor.HeaderPair|null {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new HttpInterceptor.HeaderPair()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
responseHeadersLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
requestBody():string|null
requestBody(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
requestBody(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
responseBody():string|null
responseBody(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
responseBody(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns boolean
 */
isIntercepted():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param flatbuffers.Builder builder
 */
static startFlowData(builder:flatbuffers.Builder) {
  builder.startObject(13);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset idOffset
 */
static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset methodOffset
 */
static addMethod(builder:flatbuffers.Builder, methodOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, methodOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset urlOffset
 */
static addUrl(builder:flatbuffers.Builder, urlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, urlOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number status
 */
static addStatus(builder:flatbuffers.Builder, status:number) {
  builder.addFieldInt16(3, status, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number startTimestamp
 */
static addStartTimestamp(builder:flatbuffers.Builder, startTimestamp:number) {
  builder.addFieldFloat64(4, startTimestamp, 0.0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number endTimestamp
 */
static addEndTimestamp(builder:flatbuffers.Builder, endTimestamp:number) {
  builder.addFieldFloat64(5, endTimestamp, 0.0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number requestSize
 */
static addRequestSize(builder:flatbuffers.Builder, requestSize:number) {
  builder.addFieldInt32(6, requestSize, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number responseSize
 */
static addResponseSize(builder:flatbuffers.Builder, responseSize:number) {
  builder.addFieldInt32(7, responseSize, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset requestHeadersOffset
 */
static addRequestHeaders(builder:flatbuffers.Builder, requestHeadersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, requestHeadersOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createRequestHeadersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startRequestHeadersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset responseHeadersOffset
 */
static addResponseHeaders(builder:flatbuffers.Builder, responseHeadersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, responseHeadersOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createResponseHeadersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startResponseHeadersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset requestBodyOffset
 */
static addRequestBody(builder:flatbuffers.Builder, requestBodyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, requestBodyOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset responseBodyOffset
 */
static addResponseBody(builder:flatbuffers.Builder, responseBodyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, responseBodyOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean isIntercepted
 */
static addIsIntercepted(builder:flatbuffers.Builder, isIntercepted:boolean) {
  builder.addFieldInt8(12, +isIntercepted, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endFlowData(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // id
  builder.requiredField(offset, 6); // method
  builder.requiredField(offset, 8); // url
  builder.requiredField(offset, 20); // request_headers
  builder.requiredField(offset, 22); // response_headers
  builder.requiredField(offset, 24); // request_body
  builder.requiredField(offset, 26); // response_body
  return offset;
};

static createFlowData(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, methodOffset:flatbuffers.Offset, urlOffset:flatbuffers.Offset, status:number, startTimestamp:number, endTimestamp:number, requestSize:number, responseSize:number, requestHeadersOffset:flatbuffers.Offset, responseHeadersOffset:flatbuffers.Offset, requestBodyOffset:flatbuffers.Offset, responseBodyOffset:flatbuffers.Offset, isIntercepted:boolean):flatbuffers.Offset {
  FlowData.startFlowData(builder);
  FlowData.addId(builder, idOffset);
  FlowData.addMethod(builder, methodOffset);
  FlowData.addUrl(builder, urlOffset);
  FlowData.addStatus(builder, status);
  FlowData.addStartTimestamp(builder, startTimestamp);
  FlowData.addEndTimestamp(builder, endTimestamp);
  FlowData.addRequestSize(builder, requestSize);
  FlowData.addResponseSize(builder, responseSize);
  FlowData.addRequestHeaders(builder, requestHeadersOffset);
  FlowData.addResponseHeaders(builder, responseHeadersOffset);
  FlowData.addRequestBody(builder, requestBodyOffset);
  FlowData.addResponseBody(builder, responseBodyOffset);
  FlowData.addIsIntercepted(builder, isIntercepted);
  return FlowData.endFlowData(builder);
}
}
}
/**
 * @constructor
 */
export namespace HttpInterceptor{
export class HeaderPair {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns HeaderPair
 */
__init(i:number, bb:flatbuffers.ByteBuffer):HeaderPair {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param HeaderPair= obj
 * @returns HeaderPair
 */
static getRootAsHeaderPair(bb:flatbuffers.ByteBuffer, obj?:HeaderPair):HeaderPair {
  return (obj || new HeaderPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param HeaderPair= obj
 * @returns HeaderPair
 */
static getSizePrefixedRootAsHeaderPair(bb:flatbuffers.ByteBuffer, obj?:HeaderPair):HeaderPair {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeaderPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
key():string|null
key(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
key(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startHeaderPair(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset keyOffset
 */
static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, keyOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endHeaderPair(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // key
  builder.requiredField(offset, 6); // value
  return offset;
};

static createHeaderPair(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {
  HeaderPair.startHeaderPair(builder);
  HeaderPair.addKey(builder, keyOffset);
  HeaderPair.addValue(builder, valueOffset);
  return HeaderPair.endHeaderPair(builder);
}
}
}
/**
 * @constructor
 */
export namespace HttpInterceptor{
export class ServerEvent {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ServerEvent
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ServerEvent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ServerEvent= obj
 * @returns ServerEvent
 */
static getRootAsServerEvent(bb:flatbuffers.ByteBuffer, obj?:ServerEvent):ServerEvent {
  return (obj || new ServerEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ServerEvent= obj
 * @returns ServerEvent
 */
static getSizePrefixedRootAsServerEvent(bb:flatbuffers.ByteBuffer, obj?:ServerEvent):ServerEvent {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ServerEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
status():string|null
status(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
status(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
port():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startServerEvent(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset statusOffset
 */
static addStatus(builder:flatbuffers.Builder, statusOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, statusOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number port
 */
static addPort(builder:flatbuffers.Builder, port:number) {
  builder.addFieldInt16(1, port, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endServerEvent(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // status
  return offset;
};

static createServerEvent(builder:flatbuffers.Builder, statusOffset:flatbuffers.Offset, port:number):flatbuffers.Offset {
  ServerEvent.startServerEvent(builder);
  ServerEvent.addStatus(builder, statusOffset);
  ServerEvent.addPort(builder, port);
  return ServerEvent.endServerEvent(builder);
}
}
}
/**
 * @constructor
 */
export namespace HttpInterceptor{
export class WebSocketMessage {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns WebSocketMessage
 */
__init(i:number, bb:flatbuffers.ByteBuffer):WebSocketMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param WebSocketMessage= obj
 * @returns WebSocketMessage
 */
static getRootAsWebSocketMessage(bb:flatbuffers.ByteBuffer, obj?:WebSocketMessage):WebSocketMessage {
  return (obj || new WebSocketMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param WebSocketMessage= obj
 * @returns WebSocketMessage
 */
static getSizePrefixedRootAsWebSocketMessage(bb:flatbuffers.ByteBuffer, obj?:WebSocketMessage):WebSocketMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new WebSocketMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
type():string|null
type(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
type(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns HttpInterceptor.WebSocketMessageType
 */
dataType():HttpInterceptor.WebSocketMessageType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : HttpInterceptor.WebSocketMessageType.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
data<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startWebSocketMessage(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset typeOffset
 */
static addType(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, typeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param HttpInterceptor.WebSocketMessageType dataType
 */
static addDataType(builder:flatbuffers.Builder, dataType:HttpInterceptor.WebSocketMessageType) {
  builder.addFieldInt8(1, dataType, HttpInterceptor.WebSocketMessageType.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endWebSocketMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // type
  builder.requiredField(offset, 8); // data
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishWebSocketMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishSizePrefixedWebSocketMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
};

static createWebSocketMessage(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset, dataType:HttpInterceptor.WebSocketMessageType, dataOffset:flatbuffers.Offset):flatbuffers.Offset {
  WebSocketMessage.startWebSocketMessage(builder);
  WebSocketMessage.addType(builder, typeOffset);
  WebSocketMessage.addDataType(builder, dataType);
  WebSocketMessage.addData(builder, dataOffset);
  return WebSocketMessage.endWebSocketMessage(builder);
}
}
}
